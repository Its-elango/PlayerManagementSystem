@model DataManagementSystem.Models.personModel

@{
    ViewBag.Title = "Insert";
}
<script src="https://kit.fontawesome.com/ce19876732.js" crossorigin="anonymous"></script>

<style>
    body {
        background-image: url('../../content/img/insertback.jpg');
        backdrop-filter: blur(4px);
        background-size: cover;
        background-repeat: no-repeat;
    }
</style>
<h1 class="text-center">Add player</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal ">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.SurName, "Player name", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @placeholder = "Enter player name..", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @placeholder = "Enter player mail..", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @placeholder = "Enter player contact number..", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @placeholder = "Enter player city..", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger text-bold" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Picture, "Picture", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Picture, new { id = "pictureHidden" })
                <input type="file" id="file" name="file" accept=".jpg,.jpeg,.png">
            </div>
        </div>
        <script>
            document.getElementById("file").addEventListener("change", function (event) {
                var file = event.target.files[0];
                var reader = new FileReader();
                reader.onload = function (e) {
                    var base64String = e.target.result.split(",")[1];
                    document.getElementById("pictureHidden").value = base64String;
                };
                reader.readAsDataURL(file);
            });
        </script>

        <div class="form-group my-5">
            <div class="col-md-offset-2 col-md-10">
                <input class="btn btn-success mx-2 mx-3" type="submit" value="Add" />
                <div class="btn btn-outline-info">
                    @Html.ActionLink("Back to list", "ViewAll")   <i class="fa-solid fa-chevron-right"> </i><!-- Link to return to the list view -->
                </div>
            </div>
        </div>
        @ViewBag.Message<!-- Display ViewBag.Message if available -->
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval") <!-- Include jQuery validation scripts -->

}
